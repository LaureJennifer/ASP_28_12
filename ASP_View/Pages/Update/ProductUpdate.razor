@page "/productupdate/{productId}"

@using ASP_28_12.Application.Catalog.ProductApp.Request
@using ASP_View.Services.ProductSer

<MudText Color="Color.Primary" Typo="Typo.h4">Cập nhật thông tin sản phẩm</MudText>

@inject ISnackbar _snackbar;
@inject IProductApiClient _productApiClient;
@inject NavigationManager _navigate;

    <EditForm Model="productUpdateRequest" OnValidSubmit="OnSubmit">
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Tên sản phẩm" @bind-Value="productUpdateRequest.Name" />
                <MudTextField Label="Đơn giá" @bind-Value="productUpdateRequest.Price" />
                <MudTextField Label="Ảnh" @bind-Value="productUpdateRequest.UrlImage" @oninput="ImageSelected" />
                @if (!string.IsNullOrEmpty(linkImg))
            {
                <MudImage Src="@productUpdateRequest.UrlImage" Width="150"></MudImage>
            }


        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto">Update</MudButton>
        </MudCardActions>
    </MudCard>
    
</EditForm>

@code {
    [Parameter]
    public string productId { set; get; }

    ProductUpdateRequest productUpdateRequest = new();
    string linkImg = "";

    private void ImageSelected(ChangeEventArgs e)
    {
        string value = e.Value.ToString();

        productUpdateRequest.UrlImage = value;

    }
    protected override async Task OnInitializedAsync()
    {
        var productDto = await _productApiClient.GetProductDetails(productId);
        productUpdateRequest.Price = productDto.Price;
        productUpdateRequest.Name = productDto.Name;
        productUpdateRequest.UrlImage = productDto.UrlImage;

    }
    private async Task OnSubmit()
    {
        var result = await _productApiClient.UpdateProduct(Guid.Parse(productId), productUpdateRequest);

        if (result)
        {
            _snackbar.Add("Cập nhật thành công", Severity.Success);
            _navigate.NavigateTo("/products");
        }
        StateHasChanged();
    }


}
