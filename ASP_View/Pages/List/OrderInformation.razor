@page "/orders"
@using ASP_28_12.Application.Catalog.OrderApp.Request
@using ASP_28_12.Application.ViewModels.Pagination
@using ASP_28_12.Domains.Entities
@using ASP_View.Services.OrderSer

<MudText Typo="Typo.h4" Color="Color.Primary" Class="mb-3">Thông tin đơn hàng</MudText>
@inject ISnackbar _snackbar;

@if (_lstOrder == null)
{
    <MudProgressCircular Color="Color.Warning" Indeterminate="true"></MudProgressCircular>
}
else
{
    <EditForm Model="@orderPagingRequest" class="mb-5">
        <MudGrid>
            <MudItem xs="8" md="8">
                
                <MudInput class="form-control" Placeholder="UserID" @bind-Value="orderPagingRequest.UserID"></MudInput>
            </MudItem>
            <MudItem xs="2" md="2">
                <MudButton OnClick="()=>SearchByTextFilled()" Class="mt-1" Color="Color.Primary" Variant="Variant.Filled">Search</MudButton>
            </MudItem>
            <MudItem xs="2" md="2" C>
                <MudButton Color="Color.Primary" Class="mt-1" Variant="Variant.Filled" OnClick="()=>NavigateToOrderCreate()">Thêm mới</MudButton>
            </MudItem>
        </MudGrid>

    </EditForm>

    

    <MudTable Items="@_lstOrder" Hover="true" Striped="true" FixedHeader="true">
        <HeaderContent>
            <MudTh>STT</MudTh>
            <MudTh class="text-center">User ID</MudTh>
            <MudTh class="text-center">Ngày đặt</MudTh>
            <MudTh class="text-center">Tổng phí</MudTh>
            <MudTh class="text-center">Trạng thái</MudTh>
            <MudTh class="text-center">Hành động</MudTh>

        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="">@(_lstOrder.IndexOf(context) + 1)</MudTd>
            <MudTd DataLabel="" Class="text-center">@context.UserID</MudTd>
                <MudTd DataLabel="" Class="text-center">@context.OrderDate.ToString("hh:mm tt dd/MM/yyyy")</MudTd>
                <MudTd DataLabel="" Class="text-center">@context.TotalFee</MudTd>
                <MudTd DataLabel="" Class="text-center">@context.Status</MudTd>

                <MudTd DataLabel="">
                    <MudGrid>
                        <MudItem xs="4" md="4" />
                        <MudItem xs="4" md="4">
                            <MudGrid>
                                <MudItem xs="4" md="4">
                                    <MudIconButton Icon="@Icons.Material.Filled.Info" Color="Color.Warning" OnClick="()=>NavigateToDetails(context.ID.ToString())"></MudIconButton>
                                </MudItem>
                                <MudItem xs="4" md="4">
                                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Success" OnClick="()=>NavigateToOrderUpdate(context.ID.ToString())"></MudIconButton>
                                </MudItem>
                                <MudItem xs="4" md="4">
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="()=>OnDeleteClicked(context.ID.ToString())"></MudIconButton>
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                        <MudItem xs="4" md="4" />
                    </MudGrid>

                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudGrid Class="mb-3">
                    <MudItem xs="12" Class="d-flex justify-center mt-3">
                        <MudPagination BoundaryCount="1" ShowPreviousButton="true" ShowNextButton="true" Count="(pagingRespone.MetaData.HasNext ? (pagingRespone.MetaData.CurrentPage + 1) :pagingRespone.MetaData.CurrentPage)" SelectedChanged="OnSelectPagination" />
                    </MudItem>
                </MudGrid>
            </PagerContent>
        </MudTable>

    <MudMessageBox @ref="_mboxDelete" Title="Xác nhận" CancelText="Hủy">
        <MessageContent>
            Xác nhận xóa sản phẩm khỏi danh sách!
        </MessageContent>
        <YesButton>
            <MudButton Color="Color.Primary" OnClick="OnConfirmDelete">
                Xác nhận
            </MudButton>
        </YesButton>
    </MudMessageBox>
}

@code {
    [Inject] IOrderApiClient _orderApiClient { set; get; }
    [Inject] NavigationManager _navigationManager { get; set; }

    Order orderDelete { get; set; } = new();

    MudMessageBox _mboxDelete { get; set; } = null!;

    public MetaData metadata = new();

    PagedList<Order> pagingRespone { get; set; } = new();

    List<Order> _lstOrder;

    OrderPagingRequest orderPagingRequest  = new();


    protected override async Task OnInitializedAsync()
    {
        await GetOrderList();
    }
    void NavigateToDetails(string orderId)
    {
        _navigationManager.NavigateTo($"/order/details/{orderId}");
    }
    void NavigateToOrderCreate()
    {
        _navigationManager.NavigateTo("/ordercreate");
    }
    void NavigateToOrderUpdate(string orderId)
    {
        _navigationManager.NavigateTo($"/orderupdate/{orderId}");
    }
    private async Task SearchByTextFilled()
    {
        await GetOrderList();
    }
    private async Task OnDeleteClicked(string id)
    {
        orderDelete = await _orderApiClient.GetOrderDetails(id);
        bool? result = await _mboxDelete.Show();

        StateHasChanged();

    }
    private async Task OnConfirmDelete()
    {
        await _orderApiClient.DeleteOrder(orderDelete.ID);
        await GetOrderList();
        _snackbar.Add("Xóa thành công", Severity.Success);
        StateHasChanged();
    }
    private async Task GetOrderList()
    {
        
        pagingRespone = await _orderApiClient.GetOrder(orderPagingRequest);
        _lstOrder = pagingRespone.Items;
        metadata = pagingRespone.MetaData;
    }

    async Task OnSelectPagination(int pageNumber)
    {
        orderPagingRequest.PageNumber = pageNumber;
        await GetOrderList();
    }
}

