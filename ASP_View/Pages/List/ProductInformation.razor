@page "/products"
@using ASP_28_12.Application.Catalog.ProductApp
@using ASP_28_12.Application.Catalog.ProductApp.Request
@using ASP_28_12.Application.ViewModels.Pagination
@using ASP_28_12.Domains.Entities
@using ASP_View.Services.ProductSer

@inject ISnackbar _snackbar;
<MudText Typo="Typo.h4" Color="Color.Primary" Class="mb-3">Thông tin sản phẩm</MudText>
@if (_lstProduct == null)
{
    <MudProgressCircular Color="Color.Warning" Indeterminate="true"></MudProgressCircular>
}
else
{
    <EditForm Model="@productPagingRequest" class="mb-5">
        <MudGrid>
            <MudItem xs="8" md="8">              
                 
                <MudInput Placeholder="Tên sản phẩm" class="form-control" @bind-Value="productPagingRequest.ProductName"></MudInput>              
            </MudItem>
            <MudItem xs="2" md="2">
                <MudButton OnClick="()=>SearchByTextFilled()" class="mt-1" Color="Color.Primary" Variant="Variant.Filled">Search</MudButton>
            </MudItem>
            <MudItem xs="2" md="2" C >
                <MudButton Color="Color.Primary" Variant="Variant.Filled" class="mt-1" OnClick="()=>NavigateToTaskCreate()">Thêm mới</MudButton>
            </MudItem>
        </MudGrid>
        
    </EditForm>

    <MudTable Items="@_lstProduct" Hover="true" Striped="true" FixedHeader="true">
        <HeaderContent>
            <MudTh>STT</MudTh>
            <MudTh>Tên</MudTh>
            <MudTh class="text-center">Hình ảnh</MudTh>
            <MudTh class="text-center">Ngày nhập</MudTh>
            <MudTh class="text-center">Đơn giá</MudTh>
            
            <MudTh class="text-center">Hành động</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="">@(_lstProduct.IndexOf(context) + 1)</MudTd>
             <MudTd DataLabel="">@context.Name</MudTd>
                <MudTd DataLabel="" Class="text-center"><MudImage Width="80" Height="50" Src=@context.UrlImage Class="rounded-lg" /></MudTd>
                <MudTd DataLabel="" class="text-center">@context.CreatedDate.ToString("hh:mm tt dd/MM/yyyy")</MudTd>
                <MudTd DataLabel="" Class="text-center">@context.Price</MudTd>
                
                <MudTd DataLabel="">
                    <MudGrid>
                        <MudItem xs="4" md="4" />
                        <MudItem xs="4" md="4">
                            <MudGrid>
                                <MudItem xs="4" md="4">
                                    <MudIconButton Icon="@Icons.Material.Filled.Info" Color="Color.Warning" OnClick="()=>NavigateToDetails(context.ID.ToString())"></MudIconButton>
                                </MudItem>
                                <MudItem xs="4" md="4">
                                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Success" OnClick="()=>NavigateToTaskUpdate(context.ID.ToString())"></MudIconButton>
                                </MudItem>
                                <MudItem xs="4" md="4">
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="()=>OnDeleteClicked(context.ID.ToString())"></MudIconButton>
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                        <MudItem xs="4" md="4" />
                    </MudGrid>

                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudGrid Class="mb-3">
                    <MudItem xs="12" Class="d-flex justify-center mt-3">
                        <MudPagination BoundaryCount="1" ShowPreviousButton="true" ShowNextButton="true" Count="(pagingRespone.MetaData.HasNext ? (pagingRespone.MetaData.CurrentPage + 1) :pagingRespone.MetaData.CurrentPage)" SelectedChanged="OnSelectPagination" />
                    </MudItem>
                </MudGrid>
            </PagerContent>
        </MudTable>

    <MudMessageBox @ref="_mboxDelete" Title="Xác nhận" CancelText="Hủy">
        <MessageContent>
            Xác nhận xóa sản phẩm khỏi danh sách!
        </MessageContent>
        <YesButton>
            <MudButton Color="Color.Primary" OnClick="OnConfirmDelete">
                Xác nhận
            </MudButton>
        </YesButton>
    </MudMessageBox>
}

@code {
    [Inject] IProductApiClient productApiClient { set; get; }
    [Inject] NavigationManager _navigationManager { get; set; }

    ProductDto productDelete { get; set; } = new();

    MudMessageBox _mboxDelete { get; set; } = null!;

    public MetaData metadata = new();

    PagedList<ProductDto> pagingRespone { get; set; } = new();

    List<ProductDto> _lstProduct;

    ProductPagingRequest productPagingRequest = new();


    protected override async Task OnInitializedAsync()
    {
        await GetProductList();
    }
    void NavigateToDetails(string productId)
    {
        _navigationManager.NavigateTo($"/product/details/{productId}");
    }
    void NavigateToTaskCreate()
    {
        _navigationManager.NavigateTo("/productcreate");
    }
    void NavigateToTaskUpdate(string productId)
    {
        _navigationManager.NavigateTo($"/productupdate/{productId}");
    }
    private async Task SearchByTextFilled()
    {
        await GetProductList();
    }
    private async Task OnDeleteClicked(string id)
    {
        productDelete = await productApiClient.GetProductDetails(id);
        bool? result = await _mboxDelete.Show();

        StateHasChanged();

    }
    private async Task OnConfirmDelete()
    {
        await productApiClient.DeleteProduct(productDelete.ID);
        await GetProductList();
        _snackbar.Add("Xóa thành công", Severity.Success);
        StateHasChanged();
    }
    private async Task GetProductList()
    {
        pagingRespone = await productApiClient.GetProduct(productPagingRequest);
        _lstProduct = pagingRespone.Items;
        metadata = pagingRespone.MetaData;
    }

    async Task OnSelectPagination(int pageNumber)
    {
        productPagingRequest.PageNumber = pageNumber;
        await GetProductList();
    }
}

