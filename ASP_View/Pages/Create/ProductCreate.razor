@page "/productcreate"
@using ASP_28_12.Application.Catalog.ProductApp.Request
@using ASP_View.Services.ProductSer

<MudText Color="Color.Primary" Typo="Typo.h4">Tạo sản phẩm mới</MudText>

@inject ISnackbar _snackbar;
@inject IProductApiClient _productApiClient;
@inject NavigationManager _navigate;

<EditForm Model="@productCreateRequest" OnValidSubmit="OnValidSubmit">
    <MudCard>
        <MudCardContent>
            <MudTextField Label="Tên sản phẩm" @bind-Value="productCreateRequest.Name" />
            <MudTextField Label="Đơn giá" @bind-Value="productCreateRequest.Price" />
            <MudTextField Label="Ảnh" @bind-Value="productCreateRequest.UrlImage" @oninput="ImageSelected"/>
                @if (!string.IsNullOrEmpty(linkImg))
                {
                <MudImage Src="@productCreateRequest.UrlImage" Width="150"></MudImage>
                }
           
            
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto">Create</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {
    ProductCreateRequest productCreateRequest = new();
    string linkImg = "";
   
    private void ImageSelected(ChangeEventArgs e)
    {
        string value = e.Value.ToString();
       
            productCreateRequest.UrlImage = value;
        
    }

    private async Task OnValidSubmit(EditContext context)
    {
        productCreateRequest.ID = Guid.NewGuid();
        var result = await _productApiClient.CreateProduct(productCreateRequest);
        if (result)
        {
            _snackbar.Add("thêm thành công", Severity.Success);
            _navigate.NavigateTo("/products");
        }
        StateHasChanged();
    }

}
