@page "/order/details/{orderId}"
@using ASP_28_12.Application.Catalog.Order
@using ASP_28_12.Application.Catalog.OrderDetails
@using ASP_28_12.Application.Catalog.OrderDetails.Request
@using ASP_28_12.Application.ViewModels.Pagination
@using ASP_28_12.Domains.Entities
@using ASP_View.Services.OrderDetails
@using ASP_View.Services.Order

@inject IOrderApiClient _orderApiClient;
@inject IOrderDetailsApiClient _orderDetailsApiClient;
@inject NavigationManager _navigationManager;
@inject ISnackbar _snackbar;

<MudGrid>
    <MudItem xs="10" md="10">
        <MudText Color="Color.Primary" Typo="Typo.h4" Class="mb-5">Thông tin chi tiết của đơn hàng</MudText>

    </MudItem>
    <MudItem xs="2" md="2">
        <MudButton Color="Color.Primary" Class="mt-1" Variant="Variant.Filled" OnClick="()=>NavigateToOrderDetailsCreate()">Thêm mới</MudButton>

    </MudItem>
</MudGrid>

@if (_orderDetailsDto == null)
{
    <MudProgressCircular Color="Color.Warning" Indeterminate="true"></MudProgressCircular>

}
else
{
    <MudGrid>
        <MudItem xs="4" md="4">
            <MudSimpleTable>
                <MudTr>
                    <MudTd>Mã đơn hàng</MudTd>
                    <MudTd>@_orderDetailsDto.ID</MudTd>
                    </MudTr>
                    <MudTr>
                        <MudTd>Mã người dùng</MudTd>
                        <MudTd>@_orderDetailsDto.UserID</MudTd>
                    </MudTr>
                    <MudTr>
                        <MudTd>Tên người dùng</MudTd>
                        <MudTd>@_orderDetailsDto.UserName</MudTd>
                    </MudTr>
                    <MudTr>
                        <MudTd>Ngày đặt hàng</MudTd>
                        <MudTd>@_orderDetailsDto.OrderDate.ToString("hh:mm tt dd/MM/yyyy")</MudTd>
                    </MudTr>
                    <MudTr>
                        <MudTd>Tổng chi phí</MudTd>
                        <MudTd>@_orderDetailsDto.TotalFee</MudTd>
                    </MudTr>
                    <MudTr>
                        <MudTd>Trạng thái</MudTd>
                        <MudTd>@_orderDetailsDto.Status</MudTd>
                    </MudTr>

                </MudSimpleTable>

            </MudItem>
            <MudItem xs="8" md="8" >

                <MudTable Items="@_lstOrderDetailsSelected" Hover="true" Striped="true" FixedHeader="true">
                    <HeaderContent>
                        <MudTh>STT</MudTh>
                        <MudTh class="text-center">Mã sản phẩm</MudTh>
                        <MudTh class="text-center">Tên sản phẩm</MudTh>
                        <MudTh class="text-center">Đơn giá</MudTh>

                        <MudTh class="text-center">Số lượng</MudTh>
                        <MudTh class="text-center">Hành động</MudTh>

                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="">@(_lstOrderDetailsSelected.IndexOf(context) + 1)</MudTd>
                        <MudTd DataLabel="" Class="text-center">@context.ProductID</MudTd>
                        <MudTd DataLabel="" Class="text-center">@context.ProductName</MudTd>
                        <MudTd DataLabel="" Class="text-center">@context.Price</MudTd>

                        <MudTd DataLabel="" Class="text-center">@context.Quantity</MudTd>
                        <MudTd DataLabel="">
                            <MudGrid>
                                <MudItem xs="4" md="4" />
                                <MudItem xs="4" md="4">
                                    <MudGrid>

                                        <MudItem xs="4" md="4">
                                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Success" OnClick="()=>NavigateToOrderDetailsUpdate(context.OrderDetailsID.ToString())"></MudIconButton>
                                        </MudItem>
                                        <MudItem xs="4" md="4">
                                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="()=>OnDeleteClicked(context.OrderDetailsID.ToString())"></MudIconButton>
                                        </MudItem>
                                    </MudGrid>
                                </MudItem>
                                <MudItem xs="4" md="4" />
                            </MudGrid>

                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudGrid Class="mb-3">
                            <MudItem xs="12" Class="d-flex justify-center mt-3">
                                <MudPagination BoundaryCount="1" ShowPreviousButton="true" ShowNextButton="true" Count="(pagingRespone.MetaData.HasNext ? (pagingRespone.MetaData.CurrentPage + 1) :pagingRespone.MetaData.CurrentPage)" SelectedChanged="OnSelectPagination" />
                            </MudItem>
                        </MudGrid>
                    </PagerContent>
                </MudTable>
            </MudItem>
        </MudGrid>

    <MudMessageBox @ref="_mboxDelete" Title="Xác nhận" CancelText="Hủy">
        <MessageContent>
            Xác nhận xóa sản phẩm khỏi danh sách!
        </MessageContent>
        <YesButton>
            <MudButton Color="Color.Primary" OnClick="OnConfirmDelete">
                Xác nhận
            </MudButton>
        </YesButton>
    </MudMessageBox>
}

@code {
    [Parameter] public string orderId { get; set; }

    OrderDetailsDto orderDetailsDelete { get; set; } = new();
    PagedList<OrderDetailsDto> pagingRespone { get; set; } = new();
    OrderDto _orderDetailsDto { get; set; }
    MudMessageBox _mboxDelete { get; set; } = null!;
    public MetaData metadata = new();

    List<OrderDetailsDto> _lstOrderDetails;
    List<OrderDetailsDto> _lstOrderDetailsSelected;


    OrderDetailsPagingRequest orderDetailsPagingRequest = new();

    protected override async Task OnInitializedAsync()
    {
        _orderDetailsDto = await _orderApiClient.GetOrderDetails(orderId);

        await GetOrderDetailsList();

    }

    void NavigateToDetails(string orderDetailsId)
    {
        _navigationManager.NavigateTo($"/order-details/details/{orderDetailsId}");
    }

    void NavigateToOrderDetailsCreate()
    {
        _navigationManager.NavigateTo("/order-details-create");
    }

    void NavigateToOrderDetailsUpdate(string orderDetailsId)
    {
        _navigationManager.NavigateTo($"/order-details-update/{orderDetailsId}");
    }

    private async Task OnDeleteClicked(string id)
    {
        orderDetailsDelete = await _orderDetailsApiClient.GetDetails(id);
        bool? result = await _mboxDelete.Show();

        StateHasChanged();

    }

    private async Task OnConfirmDelete()
    {
        await _orderDetailsApiClient.DeleteOrderDetails(orderDetailsDelete.OrderDetailsID);
        await GetOrderDetailsList();
        _snackbar.Add("Xóa thành công", Severity.Success);
        StateHasChanged();
    }

    private async Task GetOrderDetailsList()
    {

        pagingRespone = await _orderDetailsApiClient.GetOrderDetails(orderDetailsPagingRequest);
        _lstOrderDetails = pagingRespone.Items;
        _lstOrderDetailsSelected = _lstOrderDetails.Where(x => x.OrderID == _orderDetailsDto.ID).ToList();
        metadata = pagingRespone.MetaData;
    }

    async Task OnSelectPagination(int pageNumber)
    {
        orderDetailsPagingRequest.PageNumber = pageNumber;
        await GetOrderDetailsList();
    }
}
